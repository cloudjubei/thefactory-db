{
  "id": "b844d9b3-3981-43d3-ba34-2039f31f5a53",
  "status": "~",
  "title": "This project needs to run the postgresql database",
  "description": "We don't want to rely on a external dependency to run the database, this project should be self sufficient and run the database itself.\nMake it possible - the user should only need to provide a path (which could also be defaulted) where the database will be stored.\nWe need to maintain the idea of using the sql files from `docs/sql` that is used in `src/utilsts.ts` inside the function 'readSql'.",
  "features": [
    {
      "id": "c0c67b20-2454-4fbc-9fa8-99f3b5c33d0a",
      "status": "+",
      "title": "Install `pg-embedded` dependency",
      "description": "Add the `pg-embedded` npm package as a dependency to the project to manage a local PostgreSQL instance.",
      "context": []
    },
    {
      "id": "718c503d-16d7-49eb-90fa-5355546d7bc8",
      "status": "-",
      "title": "Update Database Options",
      "description": "Modify the `OpenDbOptions` type in `src/types.ts` to accept an optional `databaseDir` string. The `connectionString` property should also become optional. If `databaseDir` is provided, a local PostgreSQL instance will be started in that directory. Provide a default path if not provided.",
      "context": []
    },
    {
      "id": "243aee2b-d1dc-41ac-b906-c9ad28a6e4ab",
      "status": "-",
      "title": "Implement Local PostgreSQL Server Management",
      "description": "In `src/connection.ts`, create a new function to manage the lifecycle of an embedded PostgreSQL server using `pg-embedded`. This function should handle initialization, starting the server, and returning a connection string for the local instance. The `openPostgres` function should be updated to use this new logic when `databaseDir` is provided.",
      "context": []
    },
    {
      "id": "0849b72f-2728-4db2-a88e-feafbe527ddc",
      "status": "-",
      "title": "Adapt `openDatabase` for Local DB",
      "description": "Update the `openDatabase` function in `src/index.ts` to handle the new `databaseDir` option. It should pass the options to the modified `openPostgres` function to establish a connection to either an external or a local, managed PostgreSQL instance.",
      "context": []
    },
    {
      "id": "afd5dac4-c305-4889-b023-f37463b52934",
      "status": "-",
      "title": "Add Graceful Shutdown for Local DB",
      "description": "Implement a `close()` method in the `TheFactoryDb` interface and its implementation in `src/index.ts`. This method will gracefully shut down the embedded PostgreSQL server if one was started.",
      "context": []
    }
  ],
  "featureIdToDisplayIndex": {
    "c0c67b20-2454-4fbc-9fa8-99f3b5c33d0a": 1,
    "718c503d-16d7-49eb-90fa-5355546d7bc8": 2,
    "243aee2b-d1dc-41ac-b906-c9ad28a6e4ab": 3,
    "0849b72f-2728-4db2-a88e-feafbe527ddc": 4,
    "afd5dac4-c305-4889-b023-f37463b52934": 5
  }
}